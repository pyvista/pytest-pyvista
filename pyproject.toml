[build-system]
build-backend = "flit_core.buildapi"
requires = ["flit_core >=3.2,<4"]

[project]
authors = [{ name = "The PyVista developers", email = "info@pyvista.org" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Framework :: Pytest",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.9",
  "Topic :: Software Development :: Testing",
]
dependencies = ["pytest>=3.5.0"]
dynamic = ["description", "version"]
license = { file = "LICENSE" }
name = "pytest_pyvista"
python_requires = ">=3.9"
readme = "README.rst"

[project.urls]
Home = "https://github.com/pyvista/pytest-pyvista"


[project.optional-dependencies]
docs = [
  "pydata-sphinx-theme==0.16.1",
  "sphinx-notfound-page==1.1.0",
  "sphinx==8.2.1",
  "sphinx_copybutton==0.5.2",
]
tests = [
  "codecov<2.2.0",
  "coverage==7.8.0",
  "numpy<2.3",
  "pytest-cov==6.0.0",
  "pytest>=3.5.0",
]

[project.entry-points."pytest11"]
# Location of the plugin module, in this case ./pytest_pyvista/pytest_pyvista.py
pyvista = "pytest_pyvista.pytest_pyvista"

[tool.mypy]
ignore_missing_imports = true

[tool.ruff]
line-length = 150

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
ignore = ["COM812", "D203", "D212", "ISC001"]
select = ["ALL"]

[tool.ruff.lint.isort]
# Sort by name, don't cluster "from" vs "import"
force-sort-within-sections = true
# Combines "as" imports on the same line
combine-as-imports = true
force-single-line = true
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"doc/**" = ["INP001"]
"tests/**" = ["ANN001", "INP001", "S101"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
