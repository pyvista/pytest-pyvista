[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "pytest_pyvista"
authors = [{name = "The PyVista developers", email = "info@pyvista.org"}]
readme = "README.rst"
license = {file = "LICENSE"}
dynamic = ["version", "description"]
classifiers=[
    "Development Status :: 4 - Beta",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Testing",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
]
dependencies=["pytest>=3.5.0"]
python_requires=">=3.9"

[project.urls]
Home = "https://github.com/pyvista/pytest-pyvista"


[project.optional-dependencies]
tests = [
    "codecov<2.2.0",
    "coverage==7.5.0",
    "pytest>=3.5.0",
    "pytest-cov==6.0.0",
    "numpy<2.2",
]
docs = [
    "pydata-sphinx-theme==0.16.1",
    "sphinx==8.1.3",
    "sphinx_copybutton==0.5.2",
    "sphinx-notfound-page==1.0.4",
]

[project.entry-points."pytest11"]
# Location of the plugin module, in this case ./pytest_pyvista/pytest_pyvista.py
pyvista = "pytest_pyvista.pytest_pyvista"

[tool.mypy]
ignore_missing_imports = true

[tool.ruff]
line-length = 150

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "COM812",
  "D203",
  "D212",
  "ISC001"
]

[tool.ruff.lint.isort]
# Sort by name, don't cluster "from" vs "import"
force-sort-within-sections = true
# Combines "as" imports on the same line
combine-as-imports = true
required-imports = ["from __future__ import annotations"]
force-single-line = true

[tool.ruff.lint.per-file-ignores]
"doc/**" = ["INP001"]
"tests/**" = ["ANN001", "INP001", "S101"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
